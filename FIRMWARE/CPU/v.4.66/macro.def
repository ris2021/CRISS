;запись в регистр (через temp)
.MACRO	_ldi
	ldi	temp, @1
	mov	@0, temp		
.ENDM

;запись в порт (через temp)
.MACRO	_out
	ldi	temp, @1
	out	@0, temp		
.ENDM

;запись в порт (через temp)
.MACRO	_outm
	ldi	temp, @1
	sts	@0, temp		
.ENDM

;запись WORD в порт (через temp) RL, RH, VAL
.MACRO	_outw
	_out	@1, high(@2)
	_out	@0, low(@2)
.ENDM

;запись WORD в порт (через temp) RL, RL, VAL
.MACRO	_outwm
	_outm	@1, high(@2)
	_outm	@0, low(@2)
.ENDM

; cpi via temp
.MACRO	_cpi
	ldi	temp, @1
	cp	@0, temp
.ENDM

; compare, skip if equal via temp	
.MACRO _cpse
	ldi	temp, @1
	cpse	@0, temp
.ENDM

// compare, skip if equal via temp	
.MACRO _ori
	ldi	temp, @1
	or	@0, temp
.ENDM

; compare, skip if equal via temp	
.MACRO _andi
	ldi	temp, @1
	and	@0, temp
.ENDM

; push double registor
.MACRO	pushw
	push	@0H
	push	@0L
.ENDM

; pop double registor
.MACRO	popw
	pop	@0L
	pop	@0H
.ENDM

; decode @0 from @1 data block from rampz=1, rturn to @2 
.MACRO	DECODE
        pushw	Z
        ldi	ZH, high((@1)*2)
        mov	ZL, temp
        ld	@2, Z		; decoded value to return
        popw	Z
.ENDM

.MACRO	ldw
	lds	@0L, @1
	lds	@0H, @1+1
.ENDM

.MACRO	stw
	sts	@0, @1L
	sts	@0+1, @1H
.ENDM

.MACRO	stiw
	push	temp
	ldi	temp, low(@1)
	sts	@0, temp
	ldi	temp, high(@1)
	sts	@0+1, temp
	pop	temp
.ENDM

.MACRO	ldiw
	ldi	@0L, low(@1)
	ldi	@0H, high(@1)
.ENDM

.MACRO	ldiw2
	ldi	@0L, low((@1)*2)
	ldi	@0H, high((@1)*2)
.ENDM


.MACRO	ldsw
	lds	@0L, low(@1)
	lds	@0H, high(@1)
.ENDM

;	delay for 3,6,9,12,... cycles
.MACRO 	delay3 ; 1=3 2=1+1*3+2
	ldi	temp, @0/3		;+1
_dlloop:
	dec	temp			;+1
	brne	_dlloop			;/+2/1
.ENDM

; compare value @0 with temp, rjump to @1 
.MACRO	tcbe
	cpi	temp, @0
	brne	_tcbeno
	rjmp	@1
_tcbeno:
.ENDM

; compare value @0 with zzC, rjump to @1 
.MACRO	ccbe
	cpi	zzC, @0
	brne	_ccbeno
	rjmp	@1
_ccbeno:
.ENDM

.MACRO	stst
	ldi	temp, @1
	sts	@0, temp
.ENDM

.MACRO	ldstt
	lds	temp, @1
	sts	@0, temp
.ENDM

.MACRO	ldstt2
	ldstt	@0, @1
	ldstt	@0+1, @1+1
.ENDM

.MACRO	stsz
	sts	@0, zero
.ENDM

.MACRO	ststs
	push	temp
	ldi	temp, @1
	sts	@0, temp
	pop	temp
.ENDM

.MACRO	tcbel
	cpi	temp, @0
	brne	_tcbeno
	jmp	@1
_tcbeno:
.ENDM

.MACRO	tcbel0
	cpi	FROMRAM0, @0
	brne	_tcbeno
	jmp	@1
_tcbeno:
.ENDM

.MACRO	ccbel0
	cpi	zzC, @0
	brne	_ccbeno
	jmp	@1
_ccbeno:
.ENDM


; cp reg (MEM)
.MACRO	cpmem
	push	r18
	lds	r18, @1
	cp	@0, r18
	pop	r18
.ENDM

; cp reg (MEM)
.MACRO	cfmem
	push	r18
	lds	r18, @0
	andi	r18, (1<<(@1))
	pop	r18
.ENDM

.MACRO	addw
	add	@0L, @1L
	adc	@1H, @1H
.ENDM

.MACRO	cpiw
	push	temp
	cpi	@0L, low(@1)
	ldi	temp, high(@1)
	cpc	@0H, temp
	pop	temp
.ENDM

.MACRO	cpw
	cp	@0L, @1L
	cpc	@0H, @1H
.ENDM
		